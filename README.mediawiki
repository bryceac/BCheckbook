=BCheckbook=

'''macOS Version:''' 0.1

'''iOS Version:''' 0.1.1

'''Author:''' Bryce Campbell

'''Copyright:''' 2021

'''Description:''' A simple checkbook ledger that can be used to keep track on finances on your computer and on the go without an Internet connection.

'''License:''' See LICENSE

==Notes==

This application has only been tested on macOS 11 and iOS 14 and iOS 15.

===Version History===

<dl>
<dt style="font-weight:bold">0.1.1 (iOS)</dt>
<dd>Minor patch that gives user feedback if the save was successful. November 2021</dd>
<dt style="font-weight:bold">0.1 (Both platforms)</dt>
<dd>Initial release. July 2021</dd>
</dl>

===Questions===

<ol>
<li>
<dl>
<dt style="font-weight:bold">Why create this application when there are so many other applicatios that do the same thing?</dt>
<dd>
<p>At the time of writing this README, I have been using <a href="https://gnucash.org/">GnuCash</a> to keep track of finances 
and I wanted something that could be utilized to help keep track of that on other devices.</p>
<p>In that that time, I tried looking for something kind of like GnuCash for Android, 
so I could just transfer my transactions easily and came up empty, or finding apps with features I did not need, 
such as multiple accounts and charts.</p>
<p>In light of the situation, and to challenge myself further, after coding my own implementation of Yahtzee in Swift using SwiftUI 
(application is not available anywhere at this time), I decided to make this app myself.</p>
</dd>
</dl>
</li>
<li>
<dl>
<dt style="font-weight:bold">Can I import my transactions from X?</dt>
<dd>
<p>I have been looking at a possibility of importing from GnuCash via CSV, but because of the way I modeled things and how many programs 
and users have different ways of putting down notes for transactions, I decided it was not worth it to allow importing files from other apps at this time, 
but you are definitely free to help me add in that functionality in future versions of the application.</p>
</dd>
</dl>
</li>
<li>
<dl>
<dt style="font-weight:bold">Can I pull data in from my bank account?</dt>
<dd>
<p>I might implement this in the future, but this application cannot do that at this time. I understand that it is a neat feature 
and something that may be considered a <strong>must</strong> for apps dealing in finances, but because some banks are either ditching OFX or 
only allowing certain entities access via OFX, GnuCash was unable to do online banking and many such banks want people to use their APIs instead.</p>
<p>If I am in a position to investigate these APIs, seeing as there might be some cost involved, I may look into the details and see how they relay the data, 
as figuring out those patterns would be easier than trying to deal with user habits that may import from applications like GnuCash difficult.</p>
</dd>
</dl>
</li>
</ol>

===Usage===

The program is simple enough to use, aside from quirks that cropped up because of the different UI schemes utilized for macOS and iOS.

However, one thing shared in both versions is that the dollar amount will not be recorded until pressing enter.

This is something one must live with for now because it does not seem to be possible have the fields displayed as currency and to automatically register the correct value.

Also, the currency symbol is required when inputting those values, though they are omitted in the JSON saves.

====Removing Records====

Records can be removed in one of two ways, depending on where you are using the app:

<ul>
<li>Swipe to Delete (iOS only)</li>
<li>Right click/control+click (macOS only)</li>
</ul>

===Known Issues===

<dl>
<dt style="font-weight:bold">Transactions will not automatically sort by date</dt>
<dd>
<p>To make things easier on me, I have the program automatically pull the preceding trasaction from the list, 
which help make sure the numbers are right, which sorts the transactions by date, and the computed property used to facilitate it 
is also used in displaying the data.</p>
<p>However, when testing things out on my Mac and in the iOS simulator, the views will not sort when the view refreshes.</p>
<p>Upon looking through the JSON contents, which is pretty much what the save format for this application is things are indeed sorted correctly, 
so there is not much I can do, though there may be a fix in the future, if there is indeed a fix that I can apply.</p>
</dd>
<dt style="font-weight:bold">Transaction amount is wrong, but the balance info is right</dt>
<dd>
<p>This is yet another problem I have yet to figure out. All signs point to something being wrong, but from the details of the JSON saves, 
the changes that are expected have indeed been made and are correct.</p>
<p>If there is something I can do to fix it, I will try to deal with it, but for now, there is not much I can do about this.</p>
</dd>
<dt style="font-weight:bold">Records after the record I edited do not update.</dt>
<dd>
<p>This is another one that may be a problem that is difficult to solve at this time.</p>
<p>While balance values do update when you remove records, they are not guaranteed to update by changing a value.</p>
<p>For now, the best thing to do when you notice a mistake is to fix it in your save file with a text editor and things <strong>should</strong> be rectified the next time you load it.</p>
</dd>
</dl>

===Saves & Loading===

The Mac version and iOS versions may use the same file extension, <strong>bcheck</strong>, but are very different in terms of how they work.

While the macOS application can have data saved under any name in any directory, and will only read bcheck files, which are just JSON files with a different extension (they <strong>should</strong> be viewable in any text editor without changing extensions, but can safely have the extension temporarily changed to <strong>json</strong> to do the same thing), to not 
give users the impression that any JSON file will be loadable, the iOS version does not allow such freedom. 
This difference was by design, so that automatically loading data upon launch will work properly, though it tends to be annoying.

It is recommended to save your data as <strong>transactions.bcheck</strong> if you want to send your save to your iPhone or iPad, 
as that is what the iOS app looks for when it runs.

===Backing up Data===

Your data can be backed by simply backing up the bcheck file, which <strong>should</strong> be accessible via iTunes, Finder (only guaranteed on Macs without iTunes), and the Files app on iOS.

On macOS, the file will be wherever you told it to save the file (Default is in the Documents directory).

===Transferring Saves===

As stated above, the iOS application and macOS application work very different when it comes to saving and loading, as one is more flexible in naming than the other.

If you would like to transfer saves from one device to another, there are certain things can be done, depending on platform.

====macOS Destination from iOS target====

You can use either Airdrop inside the Files app or use either Finder or iTunes to grab the save.

When the transfer is made via AirDrop, your file will located in the Downloads Folder, while Finder, and likely iTunes may be more flexible.

====iOS Destination via AirDrop====

Currently, the iOS app is not registered to accept files directly, though I intend to look into this, to ease transfers.

For now, when transferring a save via AirDrop, it is best to tell it to open the file in the Files app, navigate to the location of stuff on your device, and save the file to the <strong>BCheckbook</strong> folder.

As long as the save is named <strong>transactions.bcheck</strong>, the iOS app should automatically load the file upon start up.

===Support===

If you have any problems not listed under Known Issues, I will try my best to help you. Depending on where you are seeing the problem, send me an email at either of the following:

ios@brycecampbell.me

mac@brycecampbell.me

Use iOS email for issues that only exist in iOS and the Msc email for issues that only exist in the Mac app.

If the problems exists in both versions, choose ether one and be sure to note in the subject that it is both systems, otherwise I will assume the issue is only on the platform associate with the email you used.

===Contributing===

If you are familiar with SwiftUI and want to help make things work even better. Feel free to fork this project and submit a pull request.

Submissions will be tested by me before they will be merged.

===Other===

This program will only work on macOS 11 and later. When I tried deploying the Yahtzee program to an older version of macOS, XCode would complain about the code being used only being available on macOS 10.15 and later and other stuff was only available in macOS 11 and later.

The iOS version only works on iOS 14 and later.
