=BCheckbook=

'''iOS Version:''' 0.2
'''macOS Version:''' 0.3

'''Author:''' Bryce Campbell

'''Copyright:''' 2021

'''Description:''' A simple checkbook ledger that can be used to keep track on finances on your computer and on the go without an Internet connection.

'''License:''' See LICENSE

==Notes==

This application has only been tested on macOS 11 and iOS 14 and iOS 15.

===Version History===

<dl>
<dt style="font-weight:bold">0.3 (Currently iOS only)</dt>
<dd>
<p>Major fix that deals with transaction balances 
and also registers app as owner of <strong>bcheck</strong> files, making importing easier.</p>
<p>Data persistence also now utilizes a database, making importing old data important.</p>
</dd>
<dt style="font-weight:bold">0.2 (Both)</dt>
<dd>
<p>Major fix that deals with 
updating suceeding transactions, fixing transaction ordering, and
showing the proper amounts. Released Nov. 19, 2021
</p></dd>
<dt style="font-weight:bold">0.1.1 (iOS)</dt>
<dd>Minor patch that gives user feedback if the save was successful. November 2021</dd>
<dt style="font-weight:bold">0.1 (Both platforms)</dt>
<dd>Initial release. July 2021</dd>
</dl>

===Questions===

<ol>
<li>
<dl>
<dt style="font-weight:bold">Why create this application when there are so many other applicatios that do the same thing?</dt>
<dd>
<p>At the time of writing this README, I have been using <a href="https://gnucash.org/">GnuCash</a> to keep track of finances 
and I wanted something that could be utilized to help keep track of that on other devices.</p>
<p>In that that time, I tried looking for something kind of like GnuCash for Android, 
so I could just transfer my transactions easily and came up empty, or finding apps with features I did not need, 
such as multiple accounts and charts.</p>
<p>In light of the situation, and to challenge myself further, after coding my own implementation of Yahtzee in Swift using SwiftUI 
(application is not available anywhere at this time), I decided to make this app myself.</p>
</dd>
</dl>
</li>
<li>
<dl>
<dt style="font-weight:bold">Can I import my transactions from X?</dt>
<dd>
<p>I have been looking at a possibility of importing from GnuCash via CSV, but because of the way I modeled things and how many programs 
and users have different ways of putting down notes for transactions, I decided it was not worth it to allow importing files from other apps at this time, 
but you are definitely free to help me add in that functionality in future versions of the application.</p>
</dd>
</dl>
</li>
<li>
<dl>
<dt style="font-weight:bold">Can I pull data in from my bank account?</dt>
<dd>
<p>I might implement this in the future, but this application cannot do that at this time. I understand that it is a neat feature 
and something that may be considered a <strong>must</strong> for apps dealing in finances, but because some banks are either ditching OFX or 
only allowing certain entities access via OFX, GnuCash was unable to do online banking and many such banks want people to use their APIs instead.</p>
<p>If I am in a position to investigate these APIs, seeing as there might be some cost involved, I may look into the details and see how they relay the data, 
as figuring out those patterns would be easier than trying to deal with user habits that may import from applications like GnuCash difficult.</p>
</dd>
</dl>
</li>
</ol>

===Usage===

The program is simple enough to use, aside from quirks that cropped up because of the different UI schemes utilized for macOS and iOS.

However, one thing shared in both versions is that the dollar amount will not be recorded until pressing enter.

This is something one must live with for now because it does not seem to be possible have the fields displayed as currency and to automatically register the correct value.

Also, the currency symbol is required when inputting those values, though they are omitted in the JSON saves.

====Removing Records====

Records can be removed in one of two ways, depending on where you are using the app:

<ul>
<li>Swipe to Delete (iOS only)</li>
<li>Right click/control+click (macOS only)</li>
</ul>

===Known Issues===

<dl>
<dt style="font-weight:bold">Transaction amount is wrong</dt>
<dd>
<p>This has been partially fix.</p>
<p>This is no longer an issue in iOS, but this can still happen on macOS, mainly when changing dates.</p>
<p>If I can find a way to fix this issue, I will apply the fix when I can.</p>

<p>For now, it is best to relaunch the application or reload your save file if you notice this.</p>
</dd>
<dt style="font-weight:bold">Records after the record I edited do not update.</dt>
<dd>
<p>This issue has been <strong>completely</strong> dealt with on <strong>iOS</strong> as of version 0.3, but still exists in the Mac app, which still has its update in development.</p>
<p>While the transactions will now update properly, as of version 0.2, There are still problems that occur after changing dates of transactions.</p>
<p>If you change dates for any transaction, it is recommended that you relaunch the application and/or reload the file, so that things will be updated properly.</p>
<p>If I find a way to fix this issue, I will apply a fix when I can.</p>
</dd>
<dt style="font-weight:bold">Balance is wrong is after changing date</dt>
<dd>
<p>This problem has been dealt with on iOS as of version 0.3, but is a little bothersome to tackle to in the Mac version, whose update is still in development. I plan to deal with it as soon as I can, but I see one possible reason for that.</p>
<p>I will attempt to fix this when I can, but for now, reloading your save or relaunching the application after saving <strong>should</strong> rectify things.</p>
</dd>
<dt style="font-weight:bold">Importing records will not update existing Records</dt>
<dd>
<p>This problem exists only in version 0.3, which is iOS only at this time.</p>
<p>This is presently intentional on my part.</p>
<p>While I would have like to have import update existing records 
and have been able to do it with the code available, 
I only see the changes reflected in the database and not in the UI, 
so I chose not to have importing update records at this time.</p>
<p>If I find a way to resolve this, I will fix it as soon as I can.</p>
</dl>

===Saves & Loading===

<p>At this point in time, the Mac and iOS versions are very different. 
Both may support the <strong>bcheck</strong>, 
but the iOS app no longer reads from those files directly.</p>

<p>The iOS app currently utilizes a database backend c
alled <strong>register.db</strong>, which the 
Mac app <strong>should</strong> support at a later date, 
and instead imports any new transactions from a provided 
<strong>bcheck</strong> file into the database, 
to make it easy for users to get up and running.</p>

<p>However, the bcheck files exported by the iOS app 
can be read without issue in the Mac application.</p>

===Backing up Data===

<p>Due to the iOS app and the Mac app being very 
different at this point in time, backup procedures differ.</p>

====iOS====

<p>On iOS, you can back up your data by backing up 
either the <strong>register.db</strong> file 
or exporting your transactions to a <strong>bcheck</strong> file, 
with the latter path being the recommended way to preserve data.</p>

<p>These files are accessible in the Files app, 
Finder (only Macs without iTunes), and iTunes.</p>

====macOS===

<p>The Mac app still relies entirely on <strong>bcheck</strong> files, 
so backing up is as simple as backing up the <strong>bcheck</strong>.</p>

<p>The bcheck file will be wherever you told it to save 
(Defaults to Documents Directory).</p>

===Transferring Saves===

As stated above, the iOS application and macOS application work very different when it comes to saving and loading.

If you would like to transfer saves from one device to another, there are certain things can be done, depending on platform.

====macOS Destination from iOS target====

You can use either Airdrop inside the Files app or use either Finder or iTunes to grab the exported bcheck file.

When the transfer is made via AirDrop, your file will located in the Downloads Folder, while Finder, and likely iTunes may be more flexible.

====iOS Destination via AirDrop====

<p>As of version 0.3, the iOS app is registered to accept files bcheck directly.</p>

<p>When transferring a save via AirDrop, the application will import any new transactions into the database and update the list of transactions.</p>

<p>However, if you want to reimport everything, 
which is currently the only way to update pre existing transaction,
you need to delete <strong>register.db</strong>, after closing the application, 
and then try importing your data, as the app <strong>should</strong> 
give you a fresh copy of the database.</p>

===Support===

If you have any problems not listed under Known Issues, I will try my best to help you. Depending on where you are seeing the problem, send me an email at either of the following:

ios@brycecampbell.me

mac@brycecampbell.me

Use iOS email for issues that only exist in iOS and the Msc email for issues that only exist in the Mac app.

If the problems exists in both versions, choose ether one and be sure to note in the subject that it is both systems, otherwise I will assume the issue is only on the platform associate with the email you used.

===Contributing===

If you are familiar with SwiftUI and want to help make things work even better. Feel free to fork this project and submit a pull request.

Submissions will be tested by me before they will be merged.

===Other===

This program will only work on macOS 11 and later. When I tried deploying the Yahtzee program to an older version of macOS, XCode would complain about the code being used only being available on macOS 10.15 and later and other stuff was only available in macOS 11 and later.

The iOS version only works on iOS 14 and later.

===Projects Used===

This app uses the following projects to help things run smoothly.

<dl>
<dt>
<a href="https://github.com/stephencelis/SQLite.swift">SQLite.swift</a>
</dt>
<dd>
<p>Used to implement the database backend of the iOS application.</p>
</dd>
<dt>
<a href="https://github.com/bryceac/ComboBox">ComboBox</a>
</dt>
<dd>
<p>Custom view that is used 
to allow users to either add their own categories 
or to selected from the list of available categories.</p>
<p>On macOS this renders an NSComboBox, 
which is modified to add any custom values to the list when a user presses enter.</p>
<p>On iOS this operates as a custom picker that has filtering capabilities, 
as well as lets users add items to the list if what they type is not found.</p>
</dd>
</dl>
