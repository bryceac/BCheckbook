=BCheckbook=

'''Version:''' 1.0

'''Author:''' Bryce Campbell

'''Copyright:''' 2021

'''Description:''' A simple checkbook ledger that can be used to keep track on finances on your computer and on the go without an Internet connection.

'''License:''' See LICENSE

==Notes==

This application has only been tested on macOS 11 and iOS 15.

===Version History===

<dl>
<dt style="font-weight:bold">1.0 (Both</dt>
<dd>
<p>Major change</p>
<p>Add view that allows person to get a quick overview of transactions,
which actually makes categories useful and make some code changes to reduce redundant code.</p>
<p>Released January 13, 2022</p>
</dd>
<dt style="font-weight:bold">0.3.1 (Both)</dt>
<dd>
<p>Minor patch.</p>
<p>Take care of remaining known issues by changing how balances are retrieved.</p>
<p>Released January 2022</p>
</dd>
<dt style="font-weight:bold">0.3 (Both)</dt>
<dd>
<p>Major change, such as:
<ul>
<li>move to a database backend</li>
<li>Fix issues in mac UI and change mac UI a bit</li> 
<li>transactions can be placed into categories</li>
<li>transactions can be imported and exported (helps with migration)</li>
<li>iOS app now registered to accept bcheck format</li>
<li>Move extension code from mac code to shared</li>
</ul>
<p>Relesed December 2021.</p>
</dd>
<dt style="font-weight:bold">0.2 (Both)</dt>
<dd>
<p>Major fix that deals with 
updating suceeding transactions, fixing transaction ordering, and
showing the proper amounts. Released Nov. 19, 2021
</p></dd>
<dt style="font-weight:bold">0.1.1 (iOS)</dt>
<dd>Minor patch that gives user feedback if the save was successful. November 2021</dd>
<dt style="font-weight:bold">0.1 (Both platforms)</dt>
<dd>Initial release. July 2021</dd>
</dl>

===Questions===

<ol>
<li>
<dl>
<dt style="font-weight:bold">Why create this application when there are so many other applicatios that do the same thing?</dt>
<dd>
<p>At the time of writing this README, I have been using <a href="https://gnucash.org/">GnuCash</a> to keep track of finances 
and I wanted something that could be utilized to help keep track of that on other devices.</p>
<p>In that that time, I tried looking for something kind of like GnuCash for Android, 
so I could just transfer my transactions easily and came up empty, or finding apps with features I did not need, 
such as multiple accounts and charts.</p>
<p>In light of the situation, and to challenge myself further, after coding my own implementation of Yahtzee in Swift using SwiftUI 
(application is not available anywhere at this time), I decided to make this app myself.</p>
</dd>
</dl>
</li>
<li>
<dl>
<dt style="font-weight:bold">Can I import my transactions from X?</dt>
<dd>
<p>I have been looking at a possibility of importing from GnuCash via CSV, but because of the way I modeled things and how many programs 
and users have different ways of putting down notes for transactions, I decided it was not worth it to allow importing files from other apps at this time, 
but you are definitely free to help me add in that functionality in future versions of the application.</p>
</dd>
</dl>
</li>
<li>
<dl>
<dt style="font-weight:bold">Can I pull data in from my bank account?</dt>
<dd>
<p>I might implement this in the future, but this application cannot do that at this time. I understand that it is a neat feature 
and something that may be considered a <strong>must</strong> for apps dealing in finances, but because some banks are either ditching OFX or 
only allowing certain entities access via OFX, GnuCash was unable to do online banking and many such banks want people to use their APIs instead.</p>
<p>If I am in a position to investigate these APIs, seeing as there might be some cost involved, I may look into the details and see how they relay the data, 
as figuring out those patterns would be easier than trying to deal with user habits that make importing from applications like GnuCash difficult.</p>
</dd>
</dl>
</li>
</ol>

===Usage===

The program is simple enough to use, aside from quirks that cropped up because of the different UI schemes utilized for macOS and iOS.

However, one thing shared in both versions is that the dollar amount will not be recorded until pressing enter.

This is something one must live with for now because it does not seem to be possible have the fields displayed as currency and to automatically register the correct value.

Also, the currency symbol is required when inputting those values, though they are omitted in the JSON exports and database.

====Removing Records====

Records can only be removed from the ledger view in one of two ways, depending on where you are using the app:

<ul>
<li>Swipe to Delete (iOS only)</li>
<li>Right click/control+click (macOS only)</li>
</ul>

===Saving & Loading===

<p>At this point in time, the Mac and iOS versions are fairly similiar 
in the area of data persistece.</p>

<p>Both utilize a database stored as <strong>register.db</strong> 
and will automatically save changes to the database.</p>

<p>As such, there is no need to manually load data in either version of the app.</p>

<p>However, data must be reimported when there are discrepencies.</p>

<p>If you want to transfer things as easily as before, 
you can do so by placing the <strong>register.db</strong> database 
in the appropriate location.</p>

<p>On iOS this is in the Documents folder of the application.</p>
<p>On macOS, this location <strong>should</strong> be somewhere in your user's Library folder 
in a directory named <strong>me.brycecampbell.bcheckbook</strong>.

===Backing up Data===

<p>Due to the iOS app and the Mac app being a bit more similiar, 
with the recent changes, there are two ways to back up data.</p>

<ul>
<li>backup the database file (located in the given areas above)</li>
<li>export transactions to a bcheck file</li>
</ul>

Of the two options, the latter is recommended for most people, as the 
database structure might change in the future.

===Transferring Data===

As stated above, the iOS application and macOS application work similiarly in terms of data persistence.

You can either transfer the database, or import a bcheck file.

Please be aware that unlike before, 
where all transactions from a bcheck file were loaded every time, 
<strong>only new transactions will be imported</strong>. 
This was a decision I had to make 
because having the import functionality 
update existing records only worked on the back end,
meaning the application would need to be relaunched to see the changes.

====macOS Destination from iOS====

You can use either Airdrop inside the Files app or use either Finder or iTunes to grab the exported bcheck file.

When the transfer is made via AirDrop, your file will located in the Downloads Folder, while Finder, and likely iTunes may be more flexible.

If your fle contains changes to existing records, 
it is recommended you delete the <strong>register.db</strong>, 
which should be located in the places specified by the 
[[#Saving__Loading | Saving &#38; Loading]] section, before importing, 
as the application will regenerate it.

If you are transferring by using the database file, 
you just need to move it to the right spot.

====iOS Destination via AirDrop====

<p>As of version 0.3, the iOS app is registered to accept files bcheck directly.</p>

<p>When transferring a bcheck file via AirDrop, the application will import 
any <strong>new</strong> transactions into the database and update the list of transactions.</p>

<p>However, if you want to reimport everything, 
which is currently the only way to update pre existing transaction,
you need to delete <strong>register.db</strong>, after closing the 
application, and then try importing your data, as the app 
<strong>should</strong> regenerate the database.</p>

===Support===

If you have any problems, I will try my best to help you. Depending on where you are seeing the problem, send me an email at either of the following:

ios@brycecampbell.me

mac@brycecampbell.me

Use iOS email for issues that only exist in iOS and the Msc email for issues that only exist in the Mac app.

If the problems exists in both versions, choose ether one and be sure to note in the subject that it is both systems, otherwise I will assume the issue is only on the platform associated with the email you used.

===Contributing===

If you are familiar with Swift and SwiftUI and want to help make things 
work even better, feel free to fork this project and submit a pull request.

Submissions will be tested by me before they will be merged.

===Other===

This program will only work on macOS 11 and later. 

When I tried deploying the Yahtzee program to an older version of macOS, 
XCode would complain about the code being used only being 
available on macOS 10.15 and later and other stuff was only available in 
macOS 11 and later.

The iOS version only works on iOS 14 and later.

===Projects Used===

This app uses the following projects to help things run smoothly.

<dl>
<dt>
<a href="https://github.com/stephencelis/SQLite.swift">SQLite.swift</a>
</dt>
<dd>
<p>Used to implement the database backend of the application.</p>
</dd>
<dt>
<a href="https://github.com/bryceac/ComboBox">ComboBox</a>
</dt>
<dd>
<p>Custom view that is used 
to allow users to either add their own categories 
or to selected from the list of available categories.</p>
</dd>
</dl>
